---
// Importamos los datos de objetos.json
import Objetos from '@/data/objetos.json';

// Definimos la interfaz para un objeto
interface Objeto {
  nombre: string;
  cantidad?: number;
  rareza?: string;
  descripción?: string;
  tipo?: string[];
  img?: string;
}

// Definimos la interfaz para los props
interface Props {
  mochila?: Objeto[];
}

// Extraemos la propiedad mochila de los props, por defecto es un array vacío
const { mochila = [] } = Astro.props;

// Fusionar la mochila con el segundo JSON
const objetosFusionados = mochila.map((objetoMochila) => {
  const objetoEncontrado = Objetos.find(
    (objetoJSON) => objetoJSON.nombre === objetoMochila.nombre
  );
  if (objetoEncontrado) {
    return { ...objetoMochila, ...objetoEncontrado };
  }
  return objetoMochila;
});

// Función para obtener el color según la rareza
function getColorByRarity(rareza?: string): string {
  switch (rareza?.toLowerCase()) {
    case 'poco común':
      return 'uncommon';
    case 'raro':
      return 'rare';
    case 'épico':
      return 'epic';
    case 'legendario':
      return 'legendary';
    case 'mítico':
      return 'mythic';
    case 'único':
      return 'unique';
    default:
      return 'common';
  }
}
---

<article
  class={`
    bg-[--gray] rounded-lg p-2
    grid gap-2
    w-full h-full
  `}
>
  {
    objetosFusionados.map((item) => (
      <section
        class={`
          bg-[--dark] rounded-lg p-2
          flex items-center gap-2
          w-full
        `}
      >
        {item.img && (
          <img
            class='size-14 object-contain'
            src={item.img}
            alt={item.nombre}
          />
        )}
        <div
          class='text-start p-2 border-l-2'
          style={`border-color: var(--${getColorByRarity(item.rareza)})`}
        >
          <h1 class='text-[--light] font-bold font-[unbounded]'>
            {item.nombre}{' '}
            {item.cantidad !== undefined &&
              item.cantidad !== 1 &&
              `(x${item.cantidad})`}
          </h1>
          <p class='text-[--white] text-sm'>{item.descripción}</p>
          <p class='text-[--grey] text-sm capitalize font-["lobster_two"] font-semibold'>
            ({item.tipo?.join(', ')})
          </p>
        </div>
      </section>
    ))
  }
</article>

<style>
  article {
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
  }
</style>
